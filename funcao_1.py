# -*- coding: utf-8 -*-
"""Aula_10_LPDA_SENAI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11_B0wO8pOXY6EiPBBNC1rnGVkuVpsC_T

#Funções

#Função Quadrática
"""

#Exercício
import numpy as np
import matplotlib.pyplot as plt
import math

a=int(input('Insira a: '))
b=int(input('Insira b: '))
c=int(input('Insira c: '))


#Delta
delta=b**2-(4*a*c)

if delta>0:
  print('Há 2 raízes')
elif delta==0:
  print('Há 1 raízes')
else:
  print('Não há raízes')

#Raizes
x1=(-b+math.sqrt(delta))/(2*a)
x2=(-b-math.sqrt(delta))/(2*a)

print('A raíz x1 é: ',x1,' e a raíz x2 é: ',x2)

x=np.arange(-50, 60, 1, dtype=int)
y=a*x**2+b*x+c

#Plot
plt.plot(x, y)
plt.xlabel('x', fontsize=15)
plt.ylabel('y', fontsize=15)
plt.title('Função Quadrática')
plt.show()

#Exercício
import numpy as np
import matplotlib.pyplot as plt
import math

a=int(input('Insira a: '))
b=int(input('Insira b: '))
c=int(input('Insira c: '))


#Delta
delta=b**2-(4*a*c)

if delta>0:
  print('Há 2 raízes')
elif delta==0:
  print('Há 1 raízes')
else:
  print('Não há raízes')

#Raizes
x1=(-b+math.sqrt(delta))/(2*a)
x2=(-b-math.sqrt(delta))/(2*a)

print('A raíz x1 é: ',x1,' e a raíz x2 é: ',x2)

x=np.arange(-50, 60, 1, dtype=int)
y=a*x**2+b*x+c

#Plot
plt.plot(x, y)
plt.xlabel('x', fontsize=15)
plt.ylabel('y', fontsize=15)
plt.title('Função Quadrática')
plt.show()

"""#Funções Trigonométricas"""

#Função Seno
import math

#Seno de 60 graus
print(math.sin(math.radians(60)))
#Seno de pi/radianos
print(math.sin(math.pi/3))

#Função Seno
import numpy as np

#Seno de 60 graus
print(np.sin(math.radians(60)))
#Seno de pi/radianos
print(np.sin(math.pi/3))

#Função Cosseno
import math

#Seno de 60 graus
print(math.cos(math.radians(60)))
#Seno de pi/radianos
print(math.cos(math.pi/3))

#Função Cosseno
import numpy as np

#Seno de 60 graus
print(np.cos(math.radians(60)))
#Seno de pi/radianos
print(np.cos(math.pi/3))

#Função Tangente
import math

#Seno de 60 graus
print(math.tan(math.radians(60)))
#Seno de pi/radianos
print(math.tan(math.pi/3))

#Função Tangente
import numpy as np

#Seno de 60 graus
print(np.tan(math.radians(60)))
#Seno de pi/radianos
print(np.tan(math.pi/3))

"""#Função Seno"""

import numpy as np
import matplotlib.pyplot as plt

fsin=np.sin(np.linspace(0,360,360) * np.pi / 180. )
x=np.linspace(0,360,360)

#Gráfico
plt.figure().set_figheight(2,3)
plt.plot(x, fsin)
plt.xlabel('x', fontsize=15)
plt.ylabel('sin(x)', fontsize=15)
plt.title('Função Seno')
plt.legend(['f(x)=sin(x)'])
plt.show()

"""Exercícios"""

import numpy as np
import matplotlib.pyplot as plt

fsin=np.sin(np.linspace(0,360,360) * np.pi / 180. )+ np.ones(360) * 2
x=np.linspace(0,360,360)

#Gráfico
plt.figure().set_figheight(2,3)
plt.plot(x, fsin)
plt.xlabel('x', fontsize=15)
plt.ylabel('sin(x)', fontsize=15)
plt.title('Função Seno')
plt.legend(['f(x)=sin(x)'])
plt.show()

#Subplot
import matplotlib.pyplot as plt
import numpy as np

#Gráfico
#Subplot 1
fsin=np.sin(np.linspace(0,360,360) * np.pi / 180. )
x=np.linspace(0,360,360)

plt.subplot(2, 3, 1)
plt.plot(x, fsin)
plt.xlabel('x', fontsize=15)
plt.ylabel('sin(x)', fontsize=15)
plt.title('f(x)=sin(x)')
plt.axhline(y=0, color='k')
plt.axvline(x=0, color='k')
plt.tight_layout(pad=5.0)


#Subplot 2
fsin=np.sin(np.linspace(0,360,360) * np.pi / 180. )+ np.ones(360) * 3
x=np.linspace(0,360,360)

plt.subplot(2, 3, 2)
plt.plot(x, fsin)
plt.xlabel('x', fontsize=15)
plt.ylabel('sin(x)+3', fontsize=15)
plt.title('f(x)=sin(x)+3')
plt.axhline(y=0, color='k')
plt.axvline(x=0, color='k')


#Subplot 3
fsin=np.sin(np.linspace(0,360,360) * np.pi / 180. )+ np.ones(360) * (-3)
x=np.linspace(0,360,360)

plt.subplot(2, 3, 3)
plt.plot(x, fsin)
plt.xlabel('x', fontsize=15)
plt.ylabel('sin(x)-3', fontsize=15)
plt.title('f(x)=sin(x)-3')
plt.axhline(y=0, color='k')
plt.axvline(x=0, color='k')


#Subplot 4
fsin=np.sin(3*(np.linspace(0,360,360) * np.pi / 180. ))
x=np.linspace(0,360,360)

plt.subplot(2, 3, 4)
plt.plot(x, fsin)
plt.xlabel('x', fontsize=15)
plt.ylabel('sin(3x)', fontsize=15)
plt.title('f(x)=sin(3x)')
plt.axhline(y=0, color='k')
plt.axvline(x=0, color='k')


#Subplot 5
fsin=np.sin((1/3)*(np.linspace(0,360,360) * np.pi / 180. ))
x=np.linspace(0,360,360)

plt.subplot(2, 3, 5)
plt.plot(x, fsin)
plt.xlabel('x', fontsize=15)
plt.ylabel('sin(x/3)', fontsize=15)
plt.title('f(x)=sin(x/3)')
plt.axhline(y=0, color='k')
plt.axvline(x=0, color='k')



#Subplot 6
fsin=np.sin((3)*(np.linspace(0,360,360) * np.pi / 180. ))+ np.ones(360) * (4)
x=np.linspace(0,360,360)

plt.subplot(2, 3, 6)
plt.plot(x, fsin)
plt.xlabel('x', fontsize=15)
plt.ylabel('sin(3x)+4', fontsize=15)
plt.title('f(x)=sin(3x)+4')
plt.axhline(y=0, color='k')
plt.axvline(x=0, color='k')
plt.show()